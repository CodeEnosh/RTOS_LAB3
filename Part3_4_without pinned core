TaskHandle_t Task1;
TaskHandle_t Task2;

#define LED_BUILTIN 2
unsigned int LED = LED_BUILTIN;

unsigned int Delay_init = 100;  //initial delay before user input
int Delay = Delay_init;        //User input delay
char User_In;                  // User input value
String store;                    //Storing the value

void Task1code(void *parameter) {  //creating task function to blink LED 
  
  while(1) {                         //starting an infinity while loop
    digitalWrite(LED, HIGH);                         //light up LED
    vTaskDelay(Delay / portTICK_PERIOD_MS);             
    digitalWrite(LED, LOW);                          //turn off LED
    vTaskDelay(Delay / portTICK_PERIOD_MS);     
            
    Serial.print("Current Delay in ms - ");
    Serial.println(Delay);          //printing LED delay
  }
}

void Task2code(void *parameter){  //creating task to get User input

 while(1) {                         
  if(Serial.available()>0){            //checking if any data is passed
     User_In=Serial.read();           //storing input value
     store=store+User_In;            //saving the input value
     Delay=store.toInt();            //Converting the String saved to integer to give as the Delay
  }  
  if(Serial.available()==0){                        //if no data is inputted
     vTaskDelay(Delay / portTICK_PERIOD_MS);        //continuing to blink with the same delay
     store="";                                      //resetting store variable
  }
 }   
}

void setup() {
  Serial.begin(115200);
  pinMode(LED, OUTPUT);          //setting LED pin as output
  
  //setting the Task1
  xTaskCreate(Task2code,
              "Input",
              1024,
              NULL,
              1,
              &Task2);
              
  //setting the Task2
  xTaskCreate(Task1code,
              "Toggle",
              1024,
              NULL,
              1,
              &Task1);   
}
void loop() {

}
